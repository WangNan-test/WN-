1、

package com.ytinf.resource;

import org.springframework.core.io.ByteArrayResource;
import org.springframework.core.io.Resource;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;

public class TestByteArrayResource {
    public static void main(String[] args) throws Exception {
        // 1、此时通过内存流获取了Resource接口实例
        Resource resource = new ByteArrayResource("Hello World !".getBytes()) ;
        // 2、为了方便内存流的读取，设置一个ByteArrayOutputStream
        ByteArrayOutputStream bos = new ByteArrayOutputStream() ;
        // 3、获取资源输入流实例
        InputStream input = resource.getInputStream() ;
        // 4、定义一个读取的单元，保存每次读取的字节内容
        int data = 0 ;
        while ((data = input.read()) != -1) {
            bos.write(Character.toUpperCase(data)); // 向输出流存储
        }
        // 5、将内存输出流的数据全部取出
        System.out.println(new String(bos.toByteArray()));
        // 6、资源一定要关闭
        input.close();
        bos.close();
    }
}


2、
package com.ytinf.resource;

import org.springframework.core.io.FileSystemResource;
import org.springframework.core.io.Resource;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.InputStream;
import java.util.Scanner;

public class TestFileResource {
    public static void main(String[] args) throws Exception {
        // 1、此时是通过文件流进行数据读取
        Resource resource = new FileSystemResource(new File("D:" + File.separator + "hello.txt")) ;
        // 2、将输入流的对象交由Scanner负责读取配置
        Scanner scan = new Scanner(resource.getInputStream()) ;
        while (scan.hasNext()) {
            System.out.println(scan.next());
        }
        scan.close();
    }
}


3、
package com.ytinf.resource;

import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.Resource;

import java.util.Scanner;

public class TestClassPathResource {
    public static void main(String[] args) throws Exception {
        // 1、此时是通过文件流进行数据读取
        Resource resource = new ClassPathResource("spring/spring-base.xml") ;
        // 2、将输入流的对象交由Scanner负责读取配置
        Scanner scan = new Scanner(resource.getInputStream()) ;
        scan.useDelimiter("\n") ;
        while (scan.hasNext()) {
            System.out.println(scan.next());
        }
        scan.close();
    }
}


4、
package com.ytinf.resource;

import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;

import java.util.Scanner;

public class TestUrlResource {
    public static void main(String[] args) throws Exception {
        String basePath = "https://docs.spring.io/spring/docs/5.1.7.RELEASE/" ;
        basePath = basePath + "javadoc-api/org/springframework/core/io/ClassPathResource.html" ;
        // 1、此时是通过网络流进行数据读取
        Resource resource = new UrlResource(basePath) ;
        // 2、将输入流的对象交由Scanner负责读取配置
        Scanner scan = new Scanner(resource.getInputStream()) ;
        scan.useDelimiter("\n") ;
        while (scan.hasNext()) {
            System.out.println(scan.next());
        }
        scan.close();
    }
}


5、
package com.ytinf.resource;

import org.springframework.core.io.DefaultResourceLoader;
import org.springframework.core.io.ResourceLoader;

import java.io.InputStream;
import java.util.Scanner;

public class TestResourceLoaderFile {
    public static void main(String[] args) throws Exception {
        ResourceLoader loader = new DefaultResourceLoader() ;   // 获取接口实例
        input(loader.getResource("file:D:\\hello.txt").getInputStream());
    }
    public static void input(InputStream input) {
        Scanner scan = new Scanner(input) ;
        scan.useDelimiter("\n") ;
        while (scan.hasNext()) {
            System.out.println(scan.next());
        }
        scan.close();
    }
}


6、
package com.ytinf.resource;
import org.springframework.core.io.DefaultResourceLoader;
import org.springframework.core.io.ResourceLoader;
import java.io.InputStream;
import java.util.Scanner;
public class TestResourceLoaderFile {
    public static void main(String[] args) throws Exception {
        ResourceLoader loader = new DefaultResourceLoader() ;   // 获取接口实例
        input(loader.getResource("file:D:\\hello.txt").getInputStream());
    }
    public static void input(InputStream input) {
        Scanner scan = new Scanner(input) ;
        scan.useDelimiter("\n") ;
        while (scan.hasNext()) {
            System.out.println(scan.next());
        }
        scan.close();
    }
}


7、
package com.ytinf.resource;

import org.springframework.core.io.DefaultResourceLoader;
import org.springframework.core.io.ResourceLoader;

import java.io.InputStream;
import java.util.Scanner;

public class TestResourceLoaderClassPath {
    public static void main(String[] args) throws Exception {
        ResourceLoader loader = new DefaultResourceLoader() ;   // 获取接口实例
        input(loader.getResource("classpath:spring/spring-base.xml").getInputStream());
    }
    public static void input(InputStream input) {
        Scanner scan = new Scanner(input) ;
        scan.useDelimiter("\n") ;
        while (scan.hasNext()) {
            System.out.println(scan.next());
        }
        scan.close();
    }
}


8、
package com.ytinf.resource;

import org.springframework.core.io.DefaultResourceLoader;
import org.springframework.core.io.ResourceLoader;

import java.io.InputStream;
import java.util.Scanner;

public class TestResourceLoaderUrl {
    public static void main(String[] args) throws Exception {
        String path = "https://docs.spring.io/spring/docs/5.1.7.RELEASE/" +
                "javadoc-api/org/springframework/core/io/Resource.html" ;
        ResourceLoader loader = new DefaultResourceLoader() ;   // 获取接口实例
        input(loader.getResource(path).getInputStream());
    }
    public static void input(InputStream input) {
        Scanner scan = new Scanner(input) ;
        scan.useDelimiter("\n") ;
        while (scan.hasNext()) {
            System.out.println(scan.next());
        }
        scan.close();
    }
}


9、
package com.ytinf.resource;

import org.springframework.core.io.DefaultResourceLoader;
import org.springframework.core.io.ResourceLoader;

public class TestResourceLoaderClassLoader {
    public static void main(String[] args) throws Exception {
        ResourceLoader loader = new DefaultResourceLoader() ;   // 获取接口实例
        System.out.println(loader.getClassLoader());
        System.out.println(loader.getClassLoader().getParent());
        System.out.println(loader.getClassLoader().getParent().getParent());
    }
}
