

	在整个AOP实现过程之中，切入点的定义是至关重要的，由于Spring的整体运行机制是以IOC为主的，所有的对象都应该
交由Spring负责管理，也就是说所有的对象本省并不具备有任何特殊的功能，而所有特殊的功能都是基于其他的机制扩展而来的。

	如果要想进行切入的处理，在Spring里面采用了AspectJ表达式实现了切入点的定义，直接利用包进行切入点的控制处理。
基本的语法形式如下：
	execution（注解配置？修饰符配置 ？操作类型匹配 方法返回值类型 方法名称(参数匹配) 异常匹配 ）

	execution  (   public * com.ff.spring.dao.StudentDao.*(..))


	·【可选】注解配置：匹配方法上是否存在有指定的注解，例如：“@Override”;
	·【可选】修饰符匹配，主要匹配方法的修饰符“public”，“protected”，“default”本次匹配的public
	·【必选】方法返回值类型：可以匹配具体的类型，如果发现返回值f类型有多种，可以设置“*”；
	·【必选】操作类型，定义方法所在类（类的全名为包.类）,本次设置了一个包名称为“com.ff.spring.dao.StudentDao”
包名称定义好了，才可以找到具体的类，但是考虑到这个包下有可能有若干个子包，所以使用“..”设置任意层级，随后使用一个“*”
表示里面任意的程序类。
	·【必选】方法名称：匹配那个方法进行切面控制，如果使用了“*”匹配任意方法
	·【必选】参数匹配：使用“..”匹配所有的参数类型


	





























