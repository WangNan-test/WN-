实例化对象的产生格式：
	・①类名称 ②对象名称=③new ④类名称（）
 	对于以上的格式观察组成部分：
	①类名称：任何的对象都应该有其对应的类，因为没有类就不知道对象具备的功能。
	②对象名称：是一个唯一的标记，表示的是以后操作的属性的标记。
	③new：开辟一个堆内存空间；
	④类名称（）：构造方法；
所以通过以上的分析就应该已经清楚了，所谓的构造方法指得就是在使用关键字new实例化新对象
的来进行调用的操作方法，但是对于构造方法定义也需要遵守如下原则。
	方法名称比须与类名称相同，并且构造方法没有返回值类型声明，同时每一个类中一定
	会至少存在有一个构造方法，如果类中没有明确的定义任何一个构造方法，那么将自动
	生成一个无参的，什么都不做的，构造方法。

 现在类的组成：属性 、普通方法 、构造方法
	|-属性是在对象开辟堆内存的时候就开辟的空间；
	|-构造方法是在使用关键字new时同时使用
	构造方法：|=public person();
	|-普通方法是在对象已经实例化完成了（空间开辟了、构造方法执行了）在调用的，调用多次；
	普通方法：|-public void person()
 
对于类中可以自动生成的无参构造方法实际上是由一个前提：
你类中没有定义任何构造方法，相反，如果你现在类中已经定义了构造方法，那么此类默认的构造方法
不会自动生成；

构造方法作用：
	★构造方法的调用和	对象内存分配几乎时同步完成的，所以可以利用构造方法设置类中的属性内容
	构造方法可以为类中的属性进行初始化处理
	★通过构造方法设置内容实际上就可以避免重复的settr调用 
	|-在实际开发之中，setter方法除了具备有设置内容之外，也承担修改数据的操作。 

既然构造方法本身属于方法，那么方法一定就可以进行重载，而构造方法的重载更加简单，
因为方法名称就时类名称不能修改，你能做的只是只是实现参数的类型或个数不同这一概念 

但是在进行构造方法存在的时候请注意一下定义结构。建议若干个结构方法按照参数的个数采用升序或降序。
同时也需要注意一点：在进行类定义的时候，请按照如下顺序完成
	・第一部分写属性
	・第二部分写构造方法
	・第三部分写普通方法 

匿名对象：如果只需要访问一次对象的时候使用。



