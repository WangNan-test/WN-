-encoding utf-8
在java中数据类型分为两大类
1.基本数据类型
   |-数值型：表示整数或小数：
      |-整型：byte（-128~127）、short、int、long ；     ~默认值：0;
      |-浮点型：float、double；                  ~默认值：0.0;
|-字符型：char；                                       ~默认值：\u0000;
     ・大学字母（A-Z）：65（A）-90（Z）；
     ・小写字母（a-z）：97（a)-122(z);
     `大小写字母之间差了32；
     ・字符数字（'0'~'9'）：48（'0'）~47('9')；
|-布尔型：boolean；                                 ~默认值：false（假），true（真）；
【!在程序开发中表示整数就使用 int(-2147483648~2147483647)，描述小数就使用double(-1.7E308~1.7e308)；
   ！long这种数据类型一般描述日期时间、内存或文件大小（字节）；
   ！如果需要进行编码转换或者进行二进制数据传输，使用byte(-128~127)
   !char一般在描述中文的时候使用到（）
！boolean在描述程序逻辑中使用】
 2.引用数据类型：数组、类、接口               ~默认值：null；
三目运算：数据类型  变量=布尔表达式？条件满足是赋值内容：条件不满足时赋值内容；
[int x=10;
int y=20;
//如果现在x和y判断结果为true，则result的内容是x，否则是y；
int result=x>y?x:y;]

关系运算符：>,<,>=,<=,!=,==;
%（取余）
a+=b(a+b);
a-=b(a-b);
a*=b(a*b);
a/=b(a/b);


位运算符：可以按照 2 8 16进制进行数据处理
最大的特点可以进行移位处理
&有一位是0结果全为0
| 有一位是1结果为1；

逻辑运算主要就是三类：与（&&）、或（||）、非（前面加！）；
分支结构：
if（布尔表达式）{
      条件满足时的执行代码；
}else if{条件满足时执行的代码；
}.......[else{
所有条件都不满足时执行的代码
}]
循环结构：
while循环  循环的初始化内容
                 whlie（循环的结束条件判断）{
                 循环语句；
                 修改循环结束条件判断；
                 }
for循环：（循环初始化条件；循环结束判断；修改循环条件）{
                 循环体代码；
                 }
public class println{
public static void main(String args[]){
int result=0;
//1:循环初始化：int x=1;
//2:判断循环条件：x<=100;
//3:循环体操作:result+=x;
//4:判断条件变更：x++;
//5:判断循环条件：在2.3.4.5之间循环;
for(int x=1;x<=100;x++){
result+=x;
}
System.out.println(  result);
}
}
do{
}while（布尔）
do代码块里面代码不管循环条件成不成立都会至少执行一次
循环使用原则：
                   ・对于不知道循环次数，但是知道循环结束条件的使用whlie循环；
                   ・如果已经明确知道循环次数，则使用for循环；
      方法指的是一段可以被重复调用的代码块！
【  public static 方法的返回值  方法名称（[参数类型 变量,......]）{
方法体代码；
[return [返回值]；]
}
】
 在定义方法的时候对于方法的返回值有两种定义方法：
	void：没有返回值；
	基本数据类型，引用数据类型。；
 方法重载指的是：方法名称相同，参数的类型或个数不同；        
在进行方法重载的时候有一个重要的原则： 要求方法的返回值一定相同！！！
方法递归指的是一个方法自己调用自己的形式。一般如果要进行方法的递归操作往往要具备以下特点：
    ・方法比喻有一个递归的解释条件
     ・方法在每次递归处理的时候一定要做出一些变更；