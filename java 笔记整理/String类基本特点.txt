String类两种对象实例化方式：
	・直接赋值实例化方式；
    String本身是一个类，那么既然是类 类中就一定会提供有构造方法，
     而在String类中恰好提供了一个以下的构造方法。
	・类中实例化方式
     构造：	public String(String str);

字符串相等比较： 
“==”本身是进行数值比较，而如果现在用于两个对象之中，比较的是
地址数值比较；而不会进行对象内容比较；
那么要想进行内容的比较，则必须采用String类中所提供的方法（暂时变形）
	・内容比较：public boolean equals(String str);
只要是String类都具有equals方法。
public class println{
	public static void main(String[]args){
		String num1="Hello";
		String num=new String("Hello");
		System.out.println(num.equals(num));
	}
}
面试题：请解释String类中“==”和“equals（）”的区别：
	・“==”进行的是数值的比较，比较的是两个字符串的内存地址数值；
	・“equals（）”可以进行字符串内容的比较；


String类两种对象实例化的区别：

1、直接赋值： 
String ser="Hello";

String类的设计使用了一个共享设计模式
	在JVM底层实际上会自动维护一个对象池（字符串对象池）
如果现在采用了直接赋值模式进行String类对象操作，那么该实例化对象（字符串内容）
将自动的保存到这个对象池之中，如果下次继续有人使用了直接赋值的模式声明了String类的
的对象，那么此时对象池之中有指定的内容，那么将直接进行引用，如果没有，则开辟新的字符串对象
而后将其保存在对象池之中以供下次使用。（所谓的对象池就是一个对象数组）。

2、采用构造方法

	类对象使用构造方法进行实例化才属于标准做法。

	如果使用构造方法将会开辟两块内存空间，并且其中有一块堆内存空间成为垃圾空间，
除了这一缺点之外，实际上也会对字符串共享产生影响。不能在对象池中保存，如果想进入对象池中
保存，关键的问题是：需要手工操作保存，保存方法：public String intern();


面试题：请解释String类中对象的两种实例化方式的区别。
	・直接赋值：只会开辟一块堆内存空间，并且字符串对象可以保存在对象池中以供下次使用；
	・构造方法：会开辟两快堆内存空间，一块将称为垃圾，并且不会自动保存在对象池中，可以私用intern（）方法手工入池；






































