如果现在要想确认两个对象是否相等，那么因该比较的是我们对象的完整信息，
而对象的完整信息就是对象属性，所以所谓的对象比较就是两个对象的属性进行比较
	・第一种表达方式：
class Emp{
	private String name;
	private int age;
	public Emp(String name,int age){
		this.name=name;
		this.age=age;
	}
	public String getName(){
		return name;
	}
	public int getAge(){
		return age;
	}
}
public class println{
	public static void main(String[]args){
		Emp num1=new Emp("王南",9);
		Emp num2=new Emp("王南",10);
		if(num1.getName().equals(num2.getName())&&
				num1.getAge()==num2.getAge()){
			System.out.println("两个对象相等");
		}else{
			System.out.println("两个对象不等");
		}
	}
}

虽然这种方式已经实现了对象的比较，但是这种操作一定不可能在实际工作种出现，
因为客户端（主方法，调用处）需要涉及到的逻辑太多。对于对象比较的操作因该是一个
类本身所具备的功能而不应该变为外部操作。
――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
	・第二种标达方式：
现在假设对象比较的方法的名称暂时为compare()。

class Emp{
	private String name;
	private int age;
	public Emp(String name,int age){
		this.name=name;
		this.age=age;
	}
	public boolean compare(Emp num){
		if(num==null){
			return false;
		}
		if(num==this){
			return true;
		}
		if(this.name.equals(num.name)&&this.age==num.age){
			return true;
		}
		return false;
	}
}
public class println{
	public static void main(String[]args){
		Emp num1=new Emp("王南",10);
		Emp num2=new Emp("王南",10);
		if(num1.compare(null)){
			System.out.println("两个对象相等");
		}else{
			System.out.println("两个对象不等");
		}
	}
} 

对象比较是一个类本身所具备的功能，比较的时候最核心的问题：比较地址、判断是否为空、
判断各个属性。























